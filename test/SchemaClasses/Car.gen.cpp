// Auto-generated by SchemaClassGenerator - Do not manually edit!
#include "Car.gen.h"
#include "CarInternal.gen.h"
#include "CarInternal.gen.h"

#include <json/json.h>

using namespace SchemaClasses;
using namespace std;

void Car::Deserialize(Json::Value& jsonObj)
{
	Make = jsonObj["Make"].asString();
	Model = jsonObj["Model"].asString();
	Year = jsonObj["Year"].asInt();
	{
		if(Internal != nullptr) delete Internal;
		Internal = new CarInternal();
		Internal->Deserialize(jsonObj["Internal"]);
	};
	{
		auto& arr = jsonObj["CarInternals"];
		CarInternals.clear();
		CarInternals.reserve(arr.size());
		for(auto& elem : arr)
		{
			auto val = new CarInternal();
			val->Deserialize(elem);
			CarInternals.push_back(val);
		};
	};
};

void Car::Serialize(Json::Value& jsonObj)
{
	jsonObj["Make"] = Json::Value(Make);
	jsonObj["Model"] = Json::Value(Model);
	jsonObj["Year"] = Json::Value(Year);
	{
		auto obj = Json::Value(Json::objectValue);
		Internal->Serialize(obj);
		jsonObj["Internal"] = obj;
	};
	{
		auto arr = Json::Value(Json::arrayValue);
		for(auto& elem : CarInternals)
		{
			auto obj = Json::Value(Json::objectValue);
			elem->Serialize(obj);
			arr.append(obj);
		};
		jsonObj["CarInternals"] = arr;
	};
};

void Car::Destroy()
{
	Internal->Destroy();
	delete Internal;
	for(auto& elem : CarInternals)
	{
		elem->Destroy();
		delete elem;
	};
};
